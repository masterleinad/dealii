// ---------------------------------------------------------------------
//
// Copyright (C) 2011 - 2017 by the deal.II authors
//
// This file is part of the deal.II library.
//
// The deal.II library is free software; you can use it, redistribute
// it, and/or modify it under the terms of the GNU Lesser General
// Public License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
// The full text of the license can be found in the file LICENSE.md at
// the top level directory of deal.II.
//
// ---------------------------------------------------------------------



for (SCALAR : REAL_AND_COMPLEX_SCALARS)
  {
    namespace LinearAlgebra
    \{
      namespace distributed
      \{
        template class Vector<SCALAR, Host>;
      \}
    \}
  }

for (S1 : REAL_AND_COMPLEX_SCALARS; S2 : REAL_SCALARS)
  {
    namespace LinearAlgebra
    \{
      namespace distributed
      \{
        template void
        Vector<S1, Host>::reinit<S2>(const Vector<S2, Host> &, const bool);
        template S1
        Vector<S1, Host>::inner_product_local<S2>(
          const Vector<S2, Host> &) const;
        template void
        Vector<S1, Host>::copy_locally_owned_data_from<S2>(
          const Vector<S2, Host> &);
      \}
    \}
  }


for (S1, S2 : COMPLEX_SCALARS)
  {
    namespace LinearAlgebra
    \{
      namespace distributed
      \{
        template void
        Vector<S1, Host>::reinit<S2>(const Vector<S2, Host> &, const bool);
        template S1
        Vector<S1, Host>::inner_product_local<S2>(
          const Vector<S2, Host> &) const;
        template void
        Vector<S1, Host>::copy_locally_owned_data_from<S2>(
          const Vector<S2, Host> &);
      \}
    \}
  }
